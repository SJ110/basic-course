动态规划：

钢条切割问题（最优化问题）
一个问题有多个解，希望找到这些解中的最优解（最大最小），称为最优解问题。动态规划与分治法区别：

分治法：（互不相交的子问题）递归的求解子问题，如果自问题中有重叠，则递归求解中就会反复的求解这些公告子问题。造成效率下降

动态规划：（有子问题重叠） 不同的子问题具有公共的子子问题，支队子子问题求解一次，将其保存在一个表格中，无需重新计算，每次遇到时从表格中找结果。

将长度为n的钢条切割共有2^(n-1)中切割方法。最大收益为每段收益之和。钢条切个问题具有最优子结构性。    
`MEMOIZED-CUT-ROD(p,n) `
`let r[0ton]be a new array;`
`for i=0 to n`
    `r[i]=-∞;`
    `return MEMOIZED-CUT-ROD-AUX(p,n,r);`
`MEMOIZED-CUT-ROD-AUX(p,n,r)`
`if r[n]>=0 q=0;`
`if n==0 q=0;`
 `else q=-∞`
   `for i=1 to n q=max(q,p[i]+MEMOIZED-CUT-ROD-AUX(p,n-i,r));`  `r[n]=q; return q;`

时间复杂度为o(n^2);         
 矩阵链乘法:对于一串连续的矩阵乘法，给出其中计算乘法次数最少的划分方法，再给出的m和s二维数组中。m表示其中各种划分求取乘法的次数，s表示划分的位置。数组的同一行中对应相同长度的矩阵链。对于矩阵链的划分方法，可以递归的划分，每次找到最开始划分的位置，而该划分的子划分也已经计算出来，只需在数组中找到对应的划分位置即可。      
 最长公共子序列：对于两条序列而言，找出其中共同具有的最长子序列，他的特点是：公共序列中的元素不一定在原序列中连续。当划分出序列的表格之后，只需根据具体的算法即可求出一条lcs，具体方法是：从表格的右下角开始寻找，比较两个序列此位置的元素是否相等，相等则计如其中，不等则比较该位置的上一行和上一列的统计数的大小，若行>=列，则左移一个位置，否则上移一个位置。最后根据规则即可得出一条lcs。     
最优二叉搜索树：最优二叉查找树具有最优子结构性，其左子树和右子树都是最优二叉查找树。代价的计算方法是：节点的所有深度*概率求和再加1.具体的画法为根据root数组，首先确定根节点，再根据根节点确定各个子树的根节点即可。
